% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amrElm.R
\name{amrElm.default}
\alias{amrElm.default}
\title{Creates a model for AMR-ELM.}
\usage{
\method{amrElm}{default}(X, y, hidden_neurons, affinity = "cosine")
}
\arguments{
\item{X}{training data, numerical with zero mean and unit variance and patterns in the lines, attributes in the columns}

\item{y}{training data labels (binary, -1 and +1)}

\item{hidden_neurons}{the number of hidden neurons}

\item{affinity}{- only cosine implemented}
}
\value{
the amrElm model for supervised problems, with:
         Z: hidden layer weights
         H: hidden layer output
         weights: output layer weights
         affinity: the affinity used to generate the model (e.g.: cosine affinity)
         dataTrain: training data for generating affinity matrix.
}
\description{
Creates a model for AMR-ELM.
}
\examples{
data(heart)
data <- heart$data
labels <- heart$labels
hidden_neurons <- 500
N <- nrow(data)
randomPatterns <- seq(N)
data <- data[randomPatterns,]
labels <- labels[randomPatterns]
n <- floor(2*N/3)
n_test <- N - n
data <- data[randomPatterns,]
labels <- labels[randomPatterns]
X <- data[1:n,]
newdata <- data[(n+1):N,]
y <- labels[1:n]
model <- amrElmTrain(hidden_neurons,X,y)
testOutput <- amrElmTest(newdata, model)

}

